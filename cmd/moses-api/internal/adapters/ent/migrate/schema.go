// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NestsColumns holds the columns for the "nests" table.
	NestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 2147483647},
		{Name: "length", Type: field.TypeFloat64},
		{Name: "remnant_remnant_used", Type: field.TypeUUID, Nullable: true},
	}
	// NestsTable holds the schema information for the "nests" table.
	NestsTable = &schema.Table{
		Name:       "nests",
		Columns:    NestsColumns,
		PrimaryKey: []*schema.Column{NestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "nests_remnants_remnant_used",
				Columns:    []*schema.Column{NestsColumns[5]},
				RefColumns: []*schema.Column{RemnantsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "nest_created_at_id",
				Unique:  false,
				Columns: []*schema.Column{NestsColumns[1], NestsColumns[0]},
			},
		},
	}
	// PartsColumns holds the columns for the "parts" table.
	PartsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "project", Type: field.TypeString},
		{Name: "section", Type: field.TypeString},
		{Name: "pos", Type: field.TypeString},
		{Name: "quality", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "length", Type: field.TypeFloat64},
		{Name: "width", Type: field.TypeFloat64},
		{Name: "thickness", Type: field.TypeFloat64},
		{Name: "count", Type: field.TypeInt64},
		{Name: "nested", Type: field.TypeInt64},
	}
	// PartsTable holds the schema information for the "parts" table.
	PartsTable = &schema.Table{
		Name:       "parts",
		Columns:    PartsColumns,
		PrimaryKey: []*schema.Column{PartsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "part_created_at_id",
				Unique:  false,
				Columns: []*schema.Column{PartsColumns[1], PartsColumns[0]},
			},
		},
	}
	// RemnantsColumns holds the columns for the "remnants" table.
	RemnantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 2147483647},
		{Name: "quality", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "length", Type: field.TypeFloat64},
		{Name: "width", Type: field.TypeFloat64},
		{Name: "thickness", Type: field.TypeFloat64},
		{Name: "nest_remnant", Type: field.TypeUUID, Unique: true},
	}
	// RemnantsTable holds the schema information for the "remnants" table.
	RemnantsTable = &schema.Table{
		Name:       "remnants",
		Columns:    RemnantsColumns,
		PrimaryKey: []*schema.Column{RemnantsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "remnants_nests_remnant",
				Columns:    []*schema.Column{RemnantsColumns[9]},
				RefColumns: []*schema.Column{NestsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "remnant_created_at_id",
				Unique:  false,
				Columns: []*schema.Column{RemnantsColumns[1], RemnantsColumns[0]},
			},
		},
	}
	// NestPartsColumns holds the columns for the "nest_parts" table.
	NestPartsColumns = []*schema.Column{
		{Name: "nest_id", Type: field.TypeUUID},
		{Name: "part_id", Type: field.TypeUUID},
	}
	// NestPartsTable holds the schema information for the "nest_parts" table.
	NestPartsTable = &schema.Table{
		Name:       "nest_parts",
		Columns:    NestPartsColumns,
		PrimaryKey: []*schema.Column{NestPartsColumns[0], NestPartsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "nest_parts_nest_id",
				Columns:    []*schema.Column{NestPartsColumns[0]},
				RefColumns: []*schema.Column{NestsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "nest_parts_part_id",
				Columns:    []*schema.Column{NestPartsColumns[1]},
				RefColumns: []*schema.Column{PartsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NestsTable,
		PartsTable,
		RemnantsTable,
		NestPartsTable,
	}
)

func init() {
	NestsTable.ForeignKeys[0].RefTable = RemnantsTable
	RemnantsTable.ForeignKeys[0].RefTable = NestsTable
	NestPartsTable.ForeignKeys[0].RefTable = NestsTable
	NestPartsTable.ForeignKeys[1].RefTable = PartsTable
}
