// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/edanko/nx/cmd/moses-api/internal/adapters/ent/nest"
	"github.com/edanko/nx/cmd/moses-api/internal/adapters/ent/part"
	"github.com/edanko/nx/cmd/moses-api/internal/adapters/ent/remnant"
	"github.com/edanko/nx/cmd/moses-api/internal/adapters/ent/schema"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	nestMixin := schema.Nest{}.Mixin()
	nestMixinFields0 := nestMixin[0].Fields()
	_ = nestMixinFields0
	nestMixinFields1 := nestMixin[1].Fields()
	_ = nestMixinFields1
	nestFields := schema.Nest{}.Fields()
	_ = nestFields
	// nestDescCreatedAt is the schema descriptor for created_at field.
	nestDescCreatedAt := nestMixinFields1[0].Descriptor()
	// nest.DefaultCreatedAt holds the default value on creation for the created_at field.
	nest.DefaultCreatedAt = nestDescCreatedAt.Default.(func() time.Time)
	// nestDescUpdatedAt is the schema descriptor for updated_at field.
	nestDescUpdatedAt := nestMixinFields1[1].Descriptor()
	// nest.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	nest.DefaultUpdatedAt = nestDescUpdatedAt.Default.(func() time.Time)
	// nest.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	nest.UpdateDefaultUpdatedAt = nestDescUpdatedAt.UpdateDefault.(func() time.Time)
	// nestDescName is the schema descriptor for name field.
	nestDescName := nestFields[0].Descriptor()
	// nest.NameValidator is a validator for the "name" field. It is called by the builders before save.
	nest.NameValidator = nestDescName.Validators[0].(func(string) error)
	// nestDescLength is the schema descriptor for length field.
	nestDescLength := nestFields[1].Descriptor()
	// nest.LengthValidator is a validator for the "length" field. It is called by the builders before save.
	nest.LengthValidator = nestDescLength.Validators[0].(func(float64) error)
	// nestDescID is the schema descriptor for id field.
	nestDescID := nestMixinFields0[0].Descriptor()
	// nest.DefaultID holds the default value on creation for the id field.
	nest.DefaultID = nestDescID.Default.(func() uuid.UUID)
	partMixin := schema.Part{}.Mixin()
	partMixinFields0 := partMixin[0].Fields()
	_ = partMixinFields0
	partMixinFields1 := partMixin[1].Fields()
	_ = partMixinFields1
	partFields := schema.Part{}.Fields()
	_ = partFields
	// partDescCreatedAt is the schema descriptor for created_at field.
	partDescCreatedAt := partMixinFields1[0].Descriptor()
	// part.DefaultCreatedAt holds the default value on creation for the created_at field.
	part.DefaultCreatedAt = partDescCreatedAt.Default.(func() time.Time)
	// partDescUpdatedAt is the schema descriptor for updated_at field.
	partDescUpdatedAt := partMixinFields1[1].Descriptor()
	// part.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	part.DefaultUpdatedAt = partDescUpdatedAt.Default.(func() time.Time)
	// part.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	part.UpdateDefaultUpdatedAt = partDescUpdatedAt.UpdateDefault.(func() time.Time)
	// partDescProject is the schema descriptor for project field.
	partDescProject := partFields[0].Descriptor()
	// part.ProjectValidator is a validator for the "project" field. It is called by the builders before save.
	part.ProjectValidator = partDescProject.Validators[0].(func(string) error)
	// partDescSection is the schema descriptor for section field.
	partDescSection := partFields[1].Descriptor()
	// part.SectionValidator is a validator for the "section" field. It is called by the builders before save.
	part.SectionValidator = partDescSection.Validators[0].(func(string) error)
	// partDescPos is the schema descriptor for pos field.
	partDescPos := partFields[2].Descriptor()
	// part.PosValidator is a validator for the "pos" field. It is called by the builders before save.
	part.PosValidator = partDescPos.Validators[0].(func(string) error)
	// partDescQuality is the schema descriptor for quality field.
	partDescQuality := partFields[3].Descriptor()
	// part.QualityValidator is a validator for the "quality" field. It is called by the builders before save.
	part.QualityValidator = partDescQuality.Validators[0].(func(string) error)
	// partDescType is the schema descriptor for type field.
	partDescType := partFields[4].Descriptor()
	// part.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	part.TypeValidator = partDescType.Validators[0].(func(string) error)
	// partDescLength is the schema descriptor for length field.
	partDescLength := partFields[5].Descriptor()
	// part.LengthValidator is a validator for the "length" field. It is called by the builders before save.
	part.LengthValidator = partDescLength.Validators[0].(func(float64) error)
	// partDescWidth is the schema descriptor for width field.
	partDescWidth := partFields[6].Descriptor()
	// part.WidthValidator is a validator for the "width" field. It is called by the builders before save.
	part.WidthValidator = partDescWidth.Validators[0].(func(float64) error)
	// partDescThickness is the schema descriptor for thickness field.
	partDescThickness := partFields[7].Descriptor()
	// part.ThicknessValidator is a validator for the "thickness" field. It is called by the builders before save.
	part.ThicknessValidator = partDescThickness.Validators[0].(func(float64) error)
	// partDescCount is the schema descriptor for count field.
	partDescCount := partFields[8].Descriptor()
	// part.CountValidator is a validator for the "count" field. It is called by the builders before save.
	part.CountValidator = partDescCount.Validators[0].(func(int64) error)
	// partDescID is the schema descriptor for id field.
	partDescID := partMixinFields0[0].Descriptor()
	// part.DefaultID holds the default value on creation for the id field.
	part.DefaultID = partDescID.Default.(func() uuid.UUID)
	remnantMixin := schema.Remnant{}.Mixin()
	remnantMixinFields0 := remnantMixin[0].Fields()
	_ = remnantMixinFields0
	remnantMixinFields1 := remnantMixin[1].Fields()
	_ = remnantMixinFields1
	remnantFields := schema.Remnant{}.Fields()
	_ = remnantFields
	// remnantDescCreatedAt is the schema descriptor for created_at field.
	remnantDescCreatedAt := remnantMixinFields1[0].Descriptor()
	// remnant.DefaultCreatedAt holds the default value on creation for the created_at field.
	remnant.DefaultCreatedAt = remnantDescCreatedAt.Default.(func() time.Time)
	// remnantDescUpdatedAt is the schema descriptor for updated_at field.
	remnantDescUpdatedAt := remnantMixinFields1[1].Descriptor()
	// remnant.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	remnant.DefaultUpdatedAt = remnantDescUpdatedAt.Default.(func() time.Time)
	// remnant.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	remnant.UpdateDefaultUpdatedAt = remnantDescUpdatedAt.UpdateDefault.(func() time.Time)
	// remnantDescName is the schema descriptor for name field.
	remnantDescName := remnantFields[0].Descriptor()
	// remnant.NameValidator is a validator for the "name" field. It is called by the builders before save.
	remnant.NameValidator = remnantDescName.Validators[0].(func(string) error)
	// remnantDescQuality is the schema descriptor for quality field.
	remnantDescQuality := remnantFields[1].Descriptor()
	// remnant.QualityValidator is a validator for the "quality" field. It is called by the builders before save.
	remnant.QualityValidator = remnantDescQuality.Validators[0].(func(string) error)
	// remnantDescType is the schema descriptor for type field.
	remnantDescType := remnantFields[2].Descriptor()
	// remnant.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	remnant.TypeValidator = remnantDescType.Validators[0].(func(string) error)
	// remnantDescLength is the schema descriptor for length field.
	remnantDescLength := remnantFields[3].Descriptor()
	// remnant.LengthValidator is a validator for the "length" field. It is called by the builders before save.
	remnant.LengthValidator = remnantDescLength.Validators[0].(func(float64) error)
	// remnantDescWidth is the schema descriptor for width field.
	remnantDescWidth := remnantFields[4].Descriptor()
	// remnant.WidthValidator is a validator for the "width" field. It is called by the builders before save.
	remnant.WidthValidator = remnantDescWidth.Validators[0].(func(float64) error)
	// remnantDescThickness is the schema descriptor for thickness field.
	remnantDescThickness := remnantFields[5].Descriptor()
	// remnant.ThicknessValidator is a validator for the "thickness" field. It is called by the builders before save.
	remnant.ThicknessValidator = remnantDescThickness.Validators[0].(func(float64) error)
	// remnantDescID is the schema descriptor for id field.
	remnantDescID := remnantMixinFields0[0].Descriptor()
	// remnant.DefaultID holds the default value on creation for the id field.
	remnant.DefaultID = remnantDescID.Default.(func() uuid.UUID)
}
