version: '3'

includes:
  launch: ./cmd/launch-api

tasks:
  lint:
    desc: Run linters
    cmds:
      - task: launch:lint
      - buf lint

  test:
    desc: Run tests
    cmds:
      - task: launch:test

  generate:
    desc: Generate Go code
    cmds:
      - task: launch:generate
      - buf generate
      - oapi-codegen -old-config-style -generate types -o "cmd/launch-api/internal/ports/openapi_types.gen.go" -package "ports" "api/openapi/v1/launch.yaml"
      - oapi-codegen -old-config-style -generate chi-server -o "cmd/launch-api/internal/ports/openapi_api.gen.go" -package "ports" "api/openapi/v1/launch.yaml"
      # - oapi-codegen -old-config-style -generate types -o "internal/client/kinds/openapi_types.gen.go" -package "kinds" "api/openapi/kinds.yaml"
      # - oapi-codegen -old-config-style -generate client -o "internal/client/kinds/openapi_client_gen.go" -package "kinds" "api/openapi/kinds.yaml"
#      - docker run --rm \
#        -v ${PWD}:/local openapitools/openapi-generator-cli generate \
#        -i /api/openapi/v1/launch.yaml \
#        -g go \
#        -o /local/out/go

  tools:
    desc: Install tools
    cmds:
      - go install github.com/segmentio/golines@latest
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install github.com/bufbuild/buf/cmd/buf@latest # not recommended way to install
      - go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - go install entgo.io/ent/cmd/ent@latest
      - go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest
