version: 3

tasks:
  run:
    desc: Run the app
    dir: ./cmd/launch-api
    cmds:
      - go run .

  build:
    desc: Run the app
    cmds:
      - go build -o launch-api.exe ./cmd/launch-api

  lint:
    desc: Run golangci-lint
    cmds:
      - go vet ./...
      - golangci-lint run
      - buf lint

  test:
    desc: Go test
    cmds:
      - go test ./...

  bench:
    desc: Run go benchmarks
    cmds:
      - go test ./... -bench=. -run="Benchmark*"

  format:
    desc: Run goimports
    cmds:
      - buf format -w
      - for f in $(find . -name *.go -print); do golines --base-formatter="goimports -local $(go list -m)" -w $f; done

  cover:
    desc: Go code coverage
    cmds:
      - go test ./... -coverprofile=coverage.out
      - go tool cover -func=coverage.out | grep ^total
      # - go tool cover -html=coverage.out
      - rm -f coverage.out

  generate:
    desc: Generate Go code
    cmds:
      - go generate .\...
      - buf generate
      - oapi-codegen -old-config-style -generate types -o "cmd/launch-api/internal/ports/openapi_types.gen.go" -package "ports" "api/openapi/v1/launch.yaml"
      - oapi-codegen -old-config-style -generate chi-server -o "cmd/launch-api/internal/ports/openapi_api.gen.go" -package "ports" "api/openapi/v1/launch.yaml"
      # - oapi-codegen -old-config-style -generate types -o "internal/client/kinds/openapi_types.gen.go" -package "kinds" "api/openapi/kinds.yaml"
      # - oapi-codegen -old-config-style -generate client -o "internal/client/kinds/openapi_client_gen.go" -package "kinds" "api/openapi/kinds.yaml"

  tools:
    desc: Install tools
    cmds:
      - go install github.com/segmentio/golines@latest
      - go install golang.org/x/tools/cmd/goimports@latest
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install github.com/bufbuild/buf/cmd/buf@latest # not recommended way to install
      - go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - go install entgo.io/ent/cmd/ent@latest
      - go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest
